name: Terraform Deploy Trial
on: [push]
env:
  PROJECT_ID: terraformtrial-372802
jobs:
  check_tf_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: 'auth'
        uses: google-github-actions/auth@v0.8.0
        with:
          workload_identity_provider: 'projects/379826656087/locations/global/workloadIdentityPools/github-actions-wif-pool/providers/github-actions-provider'
          service_account: 'key-rotation-test@terraformtrial-372802.iam.gserviceaccount.com'
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Fmt Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: terraform apply
        id: apply
        run: terraform apply -no-color -auto-approve
      - uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### results
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            <details><summary>Format Output</summary>
            \`\`\`\n
            ${{ steps.fmt.outputs.stdout }}
            \`\`\`
            </details>
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
            </details>
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Workflow: \`${{ github.workflow }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
        continue-on-error: true
